<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd">
	
	<!-- Controller를 제외한 모든 클래스의 객체화를 위한 영역 -->
	<!-- PersonVO p1 = new PersonVO();
	     p1.setName("hong");
	     p1.setAge(20); ... -->
	
	<!-- 위의 자바코드를 SpringBean형태로 생성해보자 -->
	<bean id="p1" class="vo.PersonVO">
		<property name="name" value="홍길동"/>
		<property name="age" value="20"/>
		<property name="tel" value="010"/>
		<!-- 이와같이 property 속성을 통해서 변수에 값을 집어넣는 구조를
		SI(SetterInjection : 셋터주입)이라고 한다 -->
	</bean>
	
	<!-- PersonVO p2 = new PersonVO("박길동", 30, "011-1111-2222"); -->
	<bean id="p2" class="vo.PersonVO">
		<constructor-arg value="박길동"/>
		<constructor-arg value="30"/>
		<constructor-arg value="010-222-2222"/>
		<!-- 이와같이 constructor 속성을 통해서 생성자로 값을 집어넣는 구조를
		CI(ConstructorInjection : 생성자주입)이라고 한다 -->
	</bean>
		
</beans>
